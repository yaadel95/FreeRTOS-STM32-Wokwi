ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32c0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32c0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB217:
   1:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32c0xx_it.c **** /**
   3:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32c0xx_it.c ****   * @file    stm32c0xx_it.c
   5:Core/Src/stm32c0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32c0xx_it.c ****   * @attention
   8:Core/Src/stm32c0xx_it.c ****   *
   9:Core/Src/stm32c0xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32c0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32c0xx_it.c ****   *
  12:Core/Src/stm32c0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32c0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32c0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32c0xx_it.c ****   *
  16:Core/Src/stm32c0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32c0xx_it.c ****   */
  18:Core/Src/stm32c0xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32c0xx_it.c **** 
  20:Core/Src/stm32c0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32c0xx_it.c **** #include "main.h"
  22:Core/Src/stm32c0xx_it.c **** #include "stm32c0xx_it.h"
  23:Core/Src/stm32c0xx_it.c **** #include "stm32c0xx_nucleo.h"
  24:Core/Src/stm32c0xx_it.c **** #include <stdio.h>
  25:Core/Src/stm32c0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/stm32c0xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32c0xx_it.c **** 
  29:Core/Src/stm32c0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32c0xx_it.c **** 
  32:Core/Src/stm32c0xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 2


  33:Core/Src/stm32c0xx_it.c **** 
  34:Core/Src/stm32c0xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32c0xx_it.c **** 
  37:Core/Src/stm32c0xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32c0xx_it.c **** 
  39:Core/Src/stm32c0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32c0xx_it.c **** 
  42:Core/Src/stm32c0xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32c0xx_it.c **** 
  44:Core/Src/stm32c0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32c0xx_it.c **** 
  47:Core/Src/stm32c0xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32c0xx_it.c **** 
  49:Core/Src/stm32c0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32c0xx_it.c **** 
  52:Core/Src/stm32c0xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32c0xx_it.c **** 
  54:Core/Src/stm32c0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32c0xx_it.c **** 
  57:Core/Src/stm32c0xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32c0xx_it.c **** 
  59:Core/Src/stm32c0xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32c0xx_it.c **** extern TIM_HandleTypeDef htim1;
  61:Core/Src/stm32c0xx_it.c **** 
  62:Core/Src/stm32c0xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32c0xx_it.c **** 
  64:Core/Src/stm32c0xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32c0xx_it.c **** 
  66:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32c0xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32c0xx_it.c **** /**
  70:Core/Src/stm32c0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32c0xx_it.c ****   */
  72:Core/Src/stm32c0xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32c0xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32c0xx_it.c **** 
  76:Core/Src/stm32c0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32c0xx_it.c ****    while (1)
  34              		.loc 1 78 4 view .LVU1
  79:Core/Src/stm32c0xx_it.c ****   {
  80:Core/Src/stm32c0xx_it.c ****   }
  35              		.loc 1 80 3 view .LVU2
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 3


  78:Core/Src/stm32c0xx_it.c ****   {
  36              		.loc 1 78 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE217:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB218:
  81:Core/Src/stm32c0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32c0xx_it.c **** }
  83:Core/Src/stm32c0xx_it.c **** 
  84:Core/Src/stm32c0xx_it.c **** /**
  85:Core/Src/stm32c0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32c0xx_it.c ****   */
  87:Core/Src/stm32c0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32c0xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32c0xx_it.c **** 
  91:Core/Src/stm32c0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32c0xx_it.c ****   while (1)
  57              		.loc 1 92 3 view .LVU5
  93:Core/Src/stm32c0xx_it.c ****   {
  94:Core/Src/stm32c0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32c0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32c0xx_it.c ****   }
  58              		.loc 1 96 3 view .LVU6
  92:Core/Src/stm32c0xx_it.c ****   {
  59              		.loc 1 92 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE218:
  64              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
  65              		.align	1
  66              		.global	EXTI4_15_IRQHandler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	EXTI4_15_IRQHandler:
  72              	.LFB219:
  97:Core/Src/stm32c0xx_it.c **** }
  98:Core/Src/stm32c0xx_it.c **** 
  99:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
 100:Core/Src/stm32c0xx_it.c **** /* STM32C0xx Peripheral Interrupt Handlers                                    */
 101:Core/Src/stm32c0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 102:Core/Src/stm32c0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 4


 103:Core/Src/stm32c0xx_it.c **** /* please refer to the startup file (startup_stm32c0xx.s).                    */
 104:Core/Src/stm32c0xx_it.c **** /******************************************************************************/
 105:Core/Src/stm32c0xx_it.c **** 
 106:Core/Src/stm32c0xx_it.c **** /**
 107:Core/Src/stm32c0xx_it.c ****   * @brief This function handles EXTI line 4 to 15 interrupts.
 108:Core/Src/stm32c0xx_it.c ****   */
 109:Core/Src/stm32c0xx_it.c **** void EXTI4_15_IRQHandler(void)
 110:Core/Src/stm32c0xx_it.c **** {
  73              		.loc 1 110 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 10B5     		push	{r4, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
 111:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 112:Core/Src/stm32c0xx_it.c **** 
 113:Core/Src/stm32c0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
 114:Core/Src/stm32c0xx_it.c ****   HAL_EXTI_IRQHandler(&H_EXTI_13);
  82              		.loc 1 114 3 view .LVU9
  83 0002 0248     		ldr	r0, .L6
  84 0004 FFF7FEFF 		bl	HAL_EXTI_IRQHandler
  85              	.LVL0:
 115:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 116:Core/Src/stm32c0xx_it.c **** 
 117:Core/Src/stm32c0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 118:Core/Src/stm32c0xx_it.c **** }
  86              		.loc 1 118 1 is_stmt 0 view .LVU10
  87              		@ sp needed
  88 0008 10BD     		pop	{r4, pc}
  89              	.L7:
  90 000a C046     		.align	2
  91              	.L6:
  92 000c 00000000 		.word	hpb_exti
  93              		.cfi_endproc
  94              	.LFE219:
  96              		.section	.text.TIM1_BRK_UP_TRG_COM_IRQHandler,"ax",%progbits
  97              		.align	1
  98              		.global	TIM1_BRK_UP_TRG_COM_IRQHandler
  99              		.syntax unified
 100              		.code	16
 101              		.thumb_func
 103              	TIM1_BRK_UP_TRG_COM_IRQHandler:
 104              	.LFB220:
 119:Core/Src/stm32c0xx_it.c **** 
 120:Core/Src/stm32c0xx_it.c **** /**
 121:Core/Src/stm32c0xx_it.c ****   * @brief This function handles TIM1 break, update, trigger and commutation interrupts.
 122:Core/Src/stm32c0xx_it.c ****   */
 123:Core/Src/stm32c0xx_it.c **** void TIM1_BRK_UP_TRG_COM_IRQHandler(void)
 124:Core/Src/stm32c0xx_it.c **** {
 105              		.loc 1 124 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 5


 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 125:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 0 */
 126:Core/Src/stm32c0xx_it.c **** 
 127:Core/Src/stm32c0xx_it.c ****   /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 0 */
 128:Core/Src/stm32c0xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 114              		.loc 1 128 3 view .LVU12
 115 0002 0248     		ldr	r0, .L9
 116 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 117              	.LVL1:
 129:Core/Src/stm32c0xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 1 */
 130:Core/Src/stm32c0xx_it.c **** 
 131:Core/Src/stm32c0xx_it.c ****   /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 1 */
 132:Core/Src/stm32c0xx_it.c **** }
 118              		.loc 1 132 1 is_stmt 0 view .LVU13
 119              		@ sp needed
 120 0008 10BD     		pop	{r4, pc}
 121              	.L10:
 122 000a C046     		.align	2
 123              	.L9:
 124 000c 00000000 		.word	htim1
 125              		.cfi_endproc
 126              	.LFE220:
 128              		.text
 129              	.Letext0:
 130              		.file 2 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/ma
 131              		.file 3 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/sy
 132              		.file 4 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 133              		.file 5 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 134              		.file 6 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 135              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_exti.h"
 136              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_tim.h"
 137              		.file 9 "Drivers/BSP/STM32C0xx_Nucleo/stm32c0xx_nucleo.h"
ARM GAS  C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 stm32c0xx_it.c
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:19     .text.NMI_Handler:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:65     .text.EXTI4_15_IRQHandler:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:71     .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:92     .text.EXTI4_15_IRQHandler:0000000c $d
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:97     .text.TIM1_BRK_UP_TRG_COM_IRQHandler:00000000 $t
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:103    .text.TIM1_BRK_UP_TRG_COM_IRQHandler:00000000 TIM1_BRK_UP_TRG_COM_IRQHandler
C:\Users\Yasi\AppData\Local\Temp\ccI8T8D7.s:124    .text.TIM1_BRK_UP_TRG_COM_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_EXTI_IRQHandler
hpb_exti
HAL_TIM_IRQHandler
htim1
